name: "ðŸ“¥ Receive Dispatch Events"

run-name: "Received dispatch from ${{ github.event.client_payload.package }} for ${{ github.event.client_payload.version }}"

on:
  repository_dispatch:
    types:
      - web-dispatch
      - server-dispatch

# sample payload:
# {
#   "branch": "master",
#   "package": "server",
#   "version": "...",
#   "git_sha": "..."
# }

concurrency:
  group: ${{ github.workflow }}-${{ github.event.client_payload.branch }}

permissions:
  contents: read

env:
  TARGET_BRANCH: ${{ github.event.client_payload.branch }}
  PACKAGE: ${{ github.event.client_payload.package }}
  VERSION: ${{ github.event.client_payload.version }}
  GIT_SHA: ${{ github.event.client_payload.git_sha }}

jobs:
  handleRecived:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.JF_BOT_TOKEN }} # since GITHUB_TOKEN pushes don't trigger any CI runs

      # check if branch exists and branch of master if not
      - name: "Handle Branching"
        if: ${{ contains(github.event.client_payload.branch, 'release') }}
        run: |-
          if git ls-remote --exit-code --heads origin "${TARGET_BRANCH}"; then
            echo "INFO: Creating new branch ${TARGET_BRANCH}"
            git checkout -b "${TARGET_BRANCH}"
          fi

      - name: "Bump Version for ${{ env.PACKAGE }} to ${{ env.VERSION }}"
        run: yq '.version = env(VERSION) | .git_sha = env(GIT_SHA)' -i ${PACKAGE}/metaValues.yaml

      - name: "Commit and Push Changes"
        run: |-
          set -exu
          git config user.name "jellyfin-bot"
          git config user.email "team@jellyfin.org"
          git add ${PACKAGE}/metaValues.yaml
          git commit -m "bump ${PACKAGE} version to ${VERSION}"
          git push origin "HEAD:refs/heads/${TARGET_BRANCH}"
